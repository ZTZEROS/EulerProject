/*
어떤 대상을 순서에 따라 배열한 것을 순열이라고 합니다. 예를 들어 3124는 숫자 1, 2, 3, 4로 만들 수 있는 순열 중 하나입니다.
이렇게 만들 수 있는 모든 순열을 숫자나 문자 순으로 늘어놓은 것을 사전식(lexicographic) 순서라고 합니다.
0, 1, 2로 만들 수 있는 사전식 순열은 다음과 같습니다.
012   021   102   120   201   210
0, 1, 2, 3, 4, 5, 6, 7, 8, 9로 만들 수 있는 사전식 순열에서 1,000,000번째는 무엇입니까?
*/
/*
#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

void main()
{
	unsigned int factorials[10];
	unsigned int orderOfPermutation;
	unsigned int millionthPermutation[10];
	
	for (unsigned int i = 0; i < 10; ++i)
	{
		factorials[i] = 1;
	
		for (unsigned int j = 1; j < i + 2; ++j)
		{
			factorials[i] *= j;
		}
	}
	
	orderOfPermutation = 0;
	memset(millionthPermutation, 0, sizeof(millionthPermutation));
	
	for (int i = 9; i > -1;)
	{
		if (orderOfPermutation + factorials[i] < 1000000)
		{
			orderOfPermutation += factorials[i];
			++millionthPermutation[9 - i - 1];

			for (unsigned int j = 0; j < 9 - i - 1; ++j)
			{
				if (millionthPermutation[j] == millionthPermutation[9 - i - 1])
				{
					++millionthPermutation[9 - i - 1];
					j = -1;
				}
			}
		}
		else --i;
	}

	for (unsigned int i = 0; i < 10; ++i)
	{
		cout << millionthPermutation[i];
	}

	cout << endl;

	//10! = 3628800;
	//9! = 362880;
	//8! = 40320;
	//7! = 5040;
	//6! = 720
	//5! = 120
	//4! = 24
	//3! = 6
	//2! = 2
	//1! = 1
	//0! = 0

	//0xxxxxxxxx 362880
	//1xxxxxxxxx 362880 + 362880 = 725760
	//20xxxxxxxx 725760 + 40320 = 766080
	//21xxxxxxxx 725760 + 40320 + 40320 = 806400
	//23xxxxxxxx 725760 + 40320 + 40320 + 40320 = 846720
	//24xxxxxxxx 725760 + 40320 + 40320 + 40320 + 40320 = 887040
	//25xxxxxxxx 725760 + 40320 + 40320 + 40320 + 40320 + 40320 = 927360
	//26xxxxxxxx 725760 + 40320 + 40320 + 40320 + 40320 + 40320 + 40320 = 967680
	//270xxxxxxx 725760 + 241920 + 5040 = 972720
	//271xxxxxxx 725760 + 241920 + 5040 + 5040 = 977760
	//273xxxxxxx 725760 + 241920 + 5040 + 5040 + 5040 = 982800
	//274xxxxxxx 725760 + 241920 + 5040 + 5040 + 5040 + 5040 = 987840
	//275xxxxxxx 725760 + 241920 + 5040 + 5040 + 5040 + 5040 + 5040 = 992880
	//276xxxxxxx 725760 + 241920 + 5040 + 5040 + 5040 + 5040 + 5040 + 5040 = 997920
	//2780xxxxxx 725760 + 241920 + 30240 + 720 = 998640
	//2781xxxxxx 725760 + 241920 + 30240 + 720 + 720 = 999360
	//27830xxxxx 725760 + 241920 + 30240 + 1440 + 120 = 999480
	//27831xxxxx 725760 + 241920 + 30240 + 1440 + 120 + 120 = 999600
	//27834xxxxx 725760 + 241920 + 30240 + 1440 + 120 + 120 + 120 = 999720
	//27835xxxxx 725760 + 241920 + 30240 + 1440 + 120 + 120 + 120 + 120 = 999840
	//27836xxxxx 725760 + 241920 + 30240 + 1440 + 120 + 120 + 120 + 120 + 120 = 999960
	//278390xxxx 725760 + 241920 + 30240 + 1440 + 600 + 24 = 999984
	//2783910xxx 725760 + 241920 + 30240 + 1440 + 600 + 24 + 6 = 999990
	//2783914xxx 725760 + 241920 + 30240 + 1440 + 600 + 24 + 6 + 6 = 999996
	//27839150xx 725760 + 241920 + 30240 + 1440 + 600 + 24 + 12 + 2 = 999998
	//27839154xx 725760 + 241920 + 30240 + 1440 + 600 + 24 + 12 + 2 + 2 = 1000000
	//2783915460
}
//2783915460
*/